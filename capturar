#!/bin/bash

# Autor: Daniel Oberti
revision="20180110"

echo "#### iniciando capturar ####"
echo "Descripción: snifer inteligente orientado a telefonia SIP"

OP=$1
DURACION=$2

TIPO="nadadenada"
MENU="OPCIONES DE CAPTURA: (1) SIP gral  /  (2) SIP+RTP gral / (3) Puerto UDP especifico / (4) Puerto UDP especifico + RTP / (5) SIP 5060 + RTP"

if [ "$OP" == "--help" ] || [ "$OP" == "--h" ] || [ "$OP" == "-help" ] || [ "$OP" == "-h" ]; then
	echo "#### capturar ####"
	echo "MODO DE USO:"
	echo "capturar [ARGUMENTOS]"
	echo
	echo "ARGUMENTOS:"
	echo "		-v/-version: Indica la revision a la que pertenece el comando."
	echo
	echo "		-u/-a: Realiza una actualizacion/update a la revision mas nueva."
	echo
	echo "		<TIPO> <DURACION>: "
	echo "		DURACION--> Se interpreta como segundos cuando es menor o igual a 3600 de lo contrario se interpreta como paquetes)"
	echo "		TIPO	--> (1/2/3/4/5) Atajo a $MENU"
	echo
	echo "		$MENU"
	echo "		(para revisar rechazos de proveedor usar la opcion "1")"
	echo "		(1) SIP gral (captura los puertos 5060 hasta 5070)"
	echo "		Luego solicita:"	
	echo "		- Cant. de paquetes (ej: 1000) ó “n” sin cantidad."
	echo "		- Cant. De segundos (ej: 60) ó “n” sin cantidad."
	echo "		- IP a capturar (x.x.x.x;y.y.y.y;...) ó “n” todas las IP"
	echo "		(2) SIP+RTP (captura los puertos 5060 hasta 5070 + audio)"
	echo "		Luego solicita:"
	echo "		- Cant. de paquetes (ej: 1000) ó “n” sin cantidad."
	echo "		- Cant. De segundos (ej: 60) ó “n” sin cantidad."
	echo "		- IP a capturar (x.x.x.x;y.y.y.y;...) ó “n” todas las IP"
	echo "		(3) SIP puerto especifico (captura puerto UDP definido, ej. 5068)"
	echo "		Luego solicita:"
	echo "		- Puerto SIP a capturar (Ej: 5068)"
	echo "		- Cant. De segundos (ej: 60) ó “n” sin cantidad."
	echo "		- IP a capturar (x.x.x.x;y.y.y.y;...) ó “n” todas las IP"
	echo "		(4) Puerto especifico + RTP (incluye audio + puerto UDP definido. Ej. 5060 [SIP] / 4568 [IAX2])"
	echo "		Luego solicita:"
	echo "		- Puerto SIP a capturar (Ej: 5068)"
	echo "		- Cant. De segundos (ej: 60) ó “n” sin cantidad."
	echo "		- IP a capturar (x.x.x.x;y.y.y.y;...) ó “n” todas las IP"
	echo "		(5) SIP 5060 + RTP (incluye audio + puerto SIP 5060)"
	echo "		Luego solicita:"
	echo "		- Puerto SIP a capturar (Ej: 5068)"
	echo "		- Cant. De segundos (ej: 60) ó “n” sin cantidad."
	echo "		- IP a capturar (x.x.x.x;y.y.y.y;...) ó “n” todas las IP"
	echo "	NOTA: "
	echo "		Puede usar CTRL + C para cancelar o finalizar captura antes de lo programado."
	echo "###################################"
	exit 0
elif [ "$OP" == "-v" ] || [ "$OP" == "-version" ]; then
	echo "Revision: $revision"
	exit 0
elif [ "$OP" == "1" ] || [ "$OP" == "2" ] || [ "$OP" == "3" ] || [ "$OP" == "4" ] || [ "$OP" == "5" ]; then
	TIPO="$OP"
elif [ "$OP" == "-a" ] || [ "$OP" == "-u" ] ; then
	echo "Actualizando..."
	nohup git clone https://github.com/doberti/tools.git && cd tools && chmod +x * && ./install && cd .. &
	exit 0
fi

_NODOIP=$(ifconfig | grep eth0 -A1 | grep 'inet addr' | awk '{print $2}')
CLIENTE="${HOSTNAME}_${_NODOIP}"
ANY=$(tcpdump -D | grep any | awk '{ print $1}' | tr -cd '[[:digit:]]')
FECHA=`date +"%Y%m%d_%H%M"`
CAPTURA=/root/${CLIENTE}__${FECHA}__.pcap


echo $MENU
if [ "$OP" != "1" ] && [ "$OP" != "2" ] && [ "$OP" != "3" ] && [ "$OP" != "4" ]&& [ "$OP" != "5" ]; then
	echo "Ingrese el tipo de datos a capturar (1/2/3/4/5):"
	echo "..."
	read TIPO
else
	echo "Selecciono: $TIPO"
fi

if [ ${TIPO} == "1" ] || [ ${TIPO} == "" ]; then
	TIPO=" ( udp port 5060 or udp port 5061 or udp port 5062 or udp port 5063 or udp port 5064 or udp port 5065 or udp port 5066 or udp port 5067 or udp port 5068 or udp port 5069 or udp port 5070 or udp port 5071 ) "
elif [ ${TIPO} == "2" ]; then
	TIPO=" ( udp port 5060 or udp port 5061 or udp port 5062 or udp port 5063 or udp port 5064 or udp port 5065 or udp port 5066 or udp port 5067 or udp port 5068 or udp port 5069 or udp port 5070 or udp port 5071 or udp portrange 10000-60000 ) "
elif [ ${TIPO} == "3" ]; then
	echo "Ingrese el puerto SIP a usar (ej:5060)"
	read TIPO
	TIPO=" ( udp port ${TIPO} ) "
elif [ ${TIPO} == "4" ]; then
	echo "Ingrese el puerto SIP a usar (ej:5060)"
	read TIPO
	TIPO=" ( udp port ${TIPO} or udp portrange 10000-60000 ) "
elif [ ${TIPO} == "5" ]; then
	TIPO=" ( udp port 5060 or udp portrange 10000-60000 ) "
fi

if [ "$DURACION" == "" ]; then
	echo "Ingrese cantidad maxima de paquetes a capturar (ej: 5000) o en su defecto coloque el caracter (n) para no usar este filtro:"
	echo "..."
	read MAX_CANT_PAQ

	if [ "$MAX_CANT_PAQ" == "n" ] || [ "$MAX_CANT_PAQ" == "" ]; then
		MAX_CANT_PAQ=""
	else
		MAX_CANT_PAQ=" -c ${MAX_CANT_PAQ} "
	fi

	echo "Ingrese cantidad maxima de tiempo (en segundos) para la captura o en su defecto coloque el caracter (n) para no usar este filtro:"
	echo "..."
	read MAX_TIME

	if [ "$MAX_TIME" == "n" ] || [ "$MAX_TIME" == "" ]; then
		MAX_TIME=""
	else
		MAX_TIME=" -G ${MAX_TIME} "
	fi
elif [ $DURACION < 3600 ]; then
	MAX_CANT_PAQ=" -G $DURACION "
elif [ $DURACION > 3600 ]; then
	MAX_CANT_PAQ=" -c $DURACION "
fi

IP=""
echo "********************************************************************"
echo "SIP:"
rasterisk -x "sip show peers" | awk '{ print $2 "  " $1 }' | grep -v Unspecified | awk {' if (int(substr($2,0,1)) == 0) print '}
echo "IAX2:"
rasterisk -x "iax2 show peers" | awk '{ print $2 "  " $1 }' | grep -v Unspecified | awk {' if (int(substr($2,0,1)) == 0) print '}
echo "********************************************************************"
echo "Ingrese la/s IP (x.x.x.x;y.y.y.y;...) que desea capturar o en su defecto coloque el caracter (n) para no usar este filtro"
echo "..."
read IP

if [ "$IP" == "n" ] || [ "$IP" == "" ]; then
		IP=""
else
		NETS=$(echo $IP | tr ";" "\n")
		IP=" and ( net 99.99.99.99"
		for NET in $NETS; do
			IP=$IP" or net ${NET} "
		done
		IP=$IP" ) "
fi

echo "...captura iniciada (si requiere cortar la captura antes de lo programado, usar CTRL + C)"

if [ "$OP" == "777" ]; then
	echo "tcpdump -s0 -nn -i ${ANY} ${TIPO} ${IP} ${MAX_CANT_PAQ} ${MAX_TIME} -w ${CAPTURA}"
fi

tcpdump -s0 -nn -i ${ANY} ${TIPO} ${IP} ${MAX_CANT_PAQ} ${MAX_TIME} -w ${CAPTURA}
echo "captura tomada: ${CAPTURA}"

if [ "$OP" == "777" ]; then
	xmail ${CAPTURA} 777
fi

echo "Fin"
exit 0
#___ /sbin/capturar; chmod +x /sbin/capturar; vim /sbin/capturar
